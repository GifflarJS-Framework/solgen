pragma solidity 0.6.0;

contract MyContract{
//VARIABLES
address public manager;
string public name;
uint256 public value1;
uint256 public max_value1;
uint256 public min_value1;


//EVENTS
event temperatureOverflow(uint256 value1, uint256 max_value1);
event temperatureUnderflow(uint256 value1, uint256 min_value1);


//FUNCTIONS
constructor(address _owner) public{
manager = _owner;
name = "DHT11";
}

function setValue(uint256 _val, uint256 _valueId) public{
if(_valueId == 1){
value1 = _val;
if(value1 >= max_value1){
emit temperatureOverflow(value1, max_value1);
}
else if(value1 <= min_value1){
emit temperatureUnderflow(value1, min_value1);
}
}
}

function setName(string memory _name) public{
name = _name;
}

}
